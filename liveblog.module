<?php

/**
 * @file
 * The module file.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_entity_extra_field_info().
 */
function liveblog_entity_extra_field_info() {
  $fields['node']['liveblog']['display']['liveblog_posts'] = [
    'label' => t('Liveblog posts'),
    'description' => t('List of the related liveblog posts.'),
    'weight' => 4,
  ];

  return $fields;
}

/**
 * Implements hook_ENTITY_TYPE_view() for user entities.
 */
function liveblog_node_view(array &$build, Node $node, EntityViewDisplayInterface $display) {
  if ($display->getComponent('liveblog_posts')) {
    $build['liveblog_posts'] = [
      '#theme' => 'liveblog_posts',
      '#node' => $node,
      // @todo: Add js, css assets.
    ];
  }
}

/**
 * Implements hook_theme().
 */
function liveblog_theme() {
  return [
    'liveblog_post' => [
      'render element' => 'elements',
    ],
    'liveblog_posts' => [
      'variables' => [
        'node' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function template_preprocess_liveblog_post(&$variables) {
  /* @var \Drupal\liveblog\Entity\LiveblogPost $post */
  $post = $variables['elements']['#liveblog_post'];
  $variables['highlight'] = $post->highlight->value;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function template_preprocess_liveblog_posts(&$variables) {
  /* @var $node Drupal\node\Entity\Node */
  $node = $variables['node'];
  // Render related posts.
  if ($node->field_status->value) {
    $views_content = views_embed_view('liveblog_posts', 'liveblog_posts', $node->id());
  }
  else {
    $views_content = views_embed_view('liveblog_posts', 'liveblog_posts_not_active', $node->id());
  }
  $variables['posts'] = \Drupal::service('renderer')->render($views_content);
}
